{"version":3,"sources":["exercises/exercise_2_filterBy/filterBy.js","exercises/exercise_3_influencers/SearchBar.js","exercises/exercise_3_influencers/Table.js","exercises/exercise_3_influencers/Influencers.js","exercises/exercise_1_uniqueBy/uniqueBy.js","index.js"],"names":["Trie","this","root","word","idx","node","char","toLowerCase","index","push","str","console","log","i","length","Input","styled","input","width","padding","marginBottom","color","fontSize","fontWeight","letterSpacing","border","SearchBar","search","setSearch","data","style","display","paddingTop","placeholder","aria-label","onChange","e","target","value","Table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","borderSpacing","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","borderBottom","background","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","margin","borderRight","Container","div","borderRadius","Influencers","useState","uniqueData","inputkey","uniqueHash","object","key","splice","uniqueBy","db","setData","useEffect","filteredData","searchTerm","keys","trie","obj","includes","arr","split","insert","ind","result","output","id","filterBy","columns","React","useMemo","Header","accessor","useTable","useSortBy","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8054716.chunk.js","sourcesContent":["// Build a Suffix trie class for string search\nclass Trie {\n  constructor() {\n    this.root = {};\n  }\n  // method to insert characters of a word in trie\n  insert(word, idx) {\n    let node = this.root;\n    // starting at the root\n    for (let char of word) {\n      // convert data input to lowercase\n      char = char.toLowerCase();\n      if (!node[char]) {\n        node[char] = {};\n        node[char].index = [idx];\n      }\n      node[char].index.push(idx);\n      node = node[char];\n    }\n  }\n  // Method to search for matching string in trie, String does not have to be a word! It can be half a word. It will enable autocomplete and quick search.\n  search(str) {\n    console.log(\"searching for word=>\", str);\n    let node = this.root;\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i].toLowerCase();\n      if (!node[char]) {\n        console.log(\"none! No Match Found\");\n        break;\n      } else {\n        if (i === str.length - 1) {\n          return node[char].index;\n        }\n      }\n      node = node[char];\n    }\n    return [];\n  }\n}\n// Main function\nexport default function filterBy(data, searchTerm, keys) {\n  let trie = new Trie();\n  // create a trie of values of all the keys in a given input.\n  for (let i = 0; i < data.length; i++) {\n    let obj = data[i];\n    for (let key in obj) {\n      if (keys.includes(key)) {\n        const arr = obj[key].split(\" \");\n        for (let word of arr) {\n          trie.insert(word, i);\n        }\n      }\n    }\n  }\n  // Array of Indices(input array) which match with our required string.\n  const ind = trie.search(searchTerm);\n  let result = {};\n  let output = [];\n  // if string matches and has a list of matching indices, create a output array of unique(non-duplicate) objects\n  if (ind.length) {\n    for (let id of ind) {\n      if (!result[id]) {\n        result[id] = true;\n        output.push(data[id]);\n      }\n    }\n    console.log(\"length of output array->\", output.length);\n    return output;\n  } else return [];\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input({\n  width: \"100%\",\n  padding: 12,\n  marginBottom: 12,\n  color: \"black\",\n  fontSize: 16,\n  fontWeight: 500,\n  letterSpacing: -0.4,\n  border: \"none\",\n});\n\nconst SearchBar = ({ search, setSearch, data }) => (\n  <div\n    style={{\n      display: \"flex\",\n      paddingTop: 12,\n    }}\n  >\n    <Input\n      placeholder=\"Search by indication, affiliation, or position...\"\n      aria-label=\"search\"\n      onChange={(e) => setSearch(e.target.value)}\n      value={search}\n    />\n  </div>\n);\n\nexport default SearchBar;\n","import React from \"react\";\n\nfunction Table({\n  getTableProps,\n  getTableBodyProps,\n  headerGroups,\n  rows,\n  prepareRow,\n}) {\n  return (\n    <>\n      <table\n        {...getTableProps()}\n        style={{\n          borderSpacing: \"0\",\n          border: \"1px solid black\",\n        }}\n      >\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  style={{\n                    padding: \"1rem\",\n                    borderBottom: \"solid 3px black\",\n                    background: \"#2a9d8f\",\n                    color: \"white\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" ðŸ”½\"\n                        : \" ðŸ”¼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td\n                      {...cell.getCellProps()}\n                      style={{\n                        margin: \"0\",\n                        padding: \"0.5rem\",\n                        borderBottom: \"1px solid black\",\n                        borderRight: \"1px solid black\",\n                      }}\n                    >\n                      {cell.render(\"Cell\")}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <br />\n      <div>Showing {rows.length} rows</div>\n    </>\n  );\n}\n\nexport default Table;\n","import React, { useState, useEffect } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport styled from \"styled-components\";\nimport db from \"../../data.json\";\n\nimport uniqueBy from \"../exercise_1_uniqueBy\";\nimport filterBy from \"../exercise_2_filterBy\";\nimport SortBy from \"./SortBy\";\nimport SearchBar from \"./SearchBar\";\nimport Table from \"./Table\";\n\nconst Container = styled.div({\n  border: \"1px solid black\",\n  borderRadius: 4,\n  padding: 24,\n  margin: 24,\n  background: \"#E8EBEC\",\n});\n\nconst Influencers = () => {\n  const [search, setSearch] = useState(\"\");\n  const uniqueData = uniqueBy(db, \"member\");\n  const [data, setData] = useState(uniqueData);\n  // const [click, setClick] = useState(null);\n  useEffect(() => {\n    const filteredData = filterBy(uniqueData, search, [\n      \"indicationCategory\",\n      \"affiliation\",\n      \"affiliationPosition\",\n    ]);\n    !filteredData.length && search.length === 0\n      ? setData(uniqueData)\n      : setData(filteredData);\n  }, [search]);\n\n  // if (click === \"prior\") {\n  //   const sortedData = SortBy(data);\n  //   setData(sortedData);\n  //   setClick(null);\n  // }\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Member Information\",\n        columns: [\n          {\n            Header: \"Member\",\n            accessor: \"member\",\n          },\n          {\n            Header: \"Type\",\n            accessor: \"influencerType\",\n          },\n          {\n            Header: \"Category\",\n            accessor: \"indicationCategory\",\n          },\n          {\n            Header: \"Affiliation\",\n            accessor: \"affiliation\",\n          },\n          {\n            Header: \"Title\",\n            accessor: \"affiliationPosition\",\n          },\n          {\n            Header: \"State\",\n            accessor: \"primaryState\",\n          },\n          {\n            Header: \"Priority\",\n            accessor: \"priority\",\n          },\n        ],\n      },\n    ],\n    []\n  );\n  // Hook - UseTable\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data }, useSortBy);\n\n  return (\n    <Container>\n      <h1>Cancer Care - Find an Oncologist</h1>\n      <SearchBar\n        setSearch={setSearch}\n        search={search}\n        data={data}\n        setData={setData}\n      />\n\n      {data.length && (\n        <Table\n          getTableProps={getTableProps}\n          getTableBodyProps={getTableBodyProps}\n          headerGroups={headerGroups}\n          rows={rows}\n          prepareRow={prepareRow}\n          useTable={useTable}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default Influencers;\n","export default function uniqueBy(data, inputkey) {\n  let uniqueHash = {};\n  // iterate through the list of data objects\n  for (let i = 0; i < data.length; i++) {\n    let object = data[i];\n    for (let key in object) {\n      // Now, within each data object iterate only until you find the inputkey\n      if (key === inputkey) {\n        if (!uniqueHash[object[key]]) {\n          uniqueHash[object[key]] = true;\n        } else {\n          // splice of the duplicate dataobject from the list\n          data.splice(i, 1);\n        }\n        break;\n      }\n    }\n  }\n  return data;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Influencers from \"./exercises/exercise_3_influencers\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Influencers />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}